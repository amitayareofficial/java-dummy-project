version: 0.2

env:
  variables:
    DOCKER_HUB_USERNAME: "amitayare" 
    DOCKER_HUB_PASSWORD: "your-docker-password"  
    REPOSITORY_URI: "992382731807.dkr.ecr.ap-south-1.amazonaws.com/symboco-sit-registry"  

phases:
  install:
    commands:
      # Update and install required dependencies
      - apt-get update
      - apt-get install -y openjdk-8-jdk

      # Install Docker
      - echo "================ Installing Docker... =================="
      - apt-get install -y docker.io
      - docker --version
      - ps aux | grep docker

      # Install Maven 3.3.9 from the official 
      - echo "Installing Apache Maven 3.3.9..."
      - curl -sL https://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz | tar xz -C /opt
      - export PATH=/opt/apache-maven-3.3.9/bin:$PATH

      # Set JAVA_HOME and MAVEN_HOME
      - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
      - export MAVEN_HOME=/opt/apache-maven-3.3.9
      - export PATH=$JAVA_HOME/bin:$MAVEN_HOME/bin:$PATH

      # Set Java 8 as the default Java version
      - update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-8-openjdk-amd64/bin/java 1
      - update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/bin/java
      - java -version  
      # - mvn -v
      - cat /etc/os-release      

  pre_build:
    commands:
      - echo "Listing files in the current directory..."
      - pwd
      - ls -l 
      # #optinal steps taking jar directly for docker image testing.-----------------------------------------
      # - mkdir -p /opt/config-service-deployable
      # - mv config-service-0.0.1-SNAPSHOT.jar /opt/config-service-deployable/

      # # List contents of /opt to verify
      # - ls -l /opt/

      # #-----------------------------------------------------------------------------------------------------------

      
      # - echo ===================Installing Maven dependencies===================
      # - mvn -X -am clean compile install -pl :config-service


      # - ls -l 
      # - ls -l ./bayview-common-services/
      # - mvn -f ./bayview-common-services/config-service/pom.xml clean package -P deployment -Dpackage.location=/opt/
      # - ls -l /opt/

      - mvn clean package -DskipTests
      - ls -l target/
      - echo =================== Logging in to Docker Hub ===================
      - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin

      # Login to ECR
      - echo =================== Logging in to Amazon ECR ===================
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $REPOSITORY_URI

      - IMAGENAME=symboco
      - DATE_TAG=$(date +%Y-%m-%d_%H%M%S)  
      - IMAGE_TAG=$DATE_TAG  

  build:
    commands:
      - echo =================== Building the Docker image ===================
      - docker build --no-cache -t $IMAGENAME:$IMAGE_TAG .
      - docker images

  post_build:
    commands:
    - echo =================== Tagging the Docker image ===================
    # Tag the image
    - docker tag $IMAGENAME:$IMAGE_TAG amitayare/devops:$IMAGE_TAG
    - docker tag $IMAGENAME:$IMAGE_TAG amitayare/devops:latest

    # ECR repository
    - docker tag $IMAGENAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
    - docker tag $IMAGENAME:$IMAGE_TAG $REPOSITORY_URI:latest

    # Push Docker Hub
    - echo =================== Pushing the Docker image to Docker Hub ===================
    - docker push amitayare/devops:$IMAGE_TAG
    - docker push amitayare/devops:latest

    # Push the Docker image to ECR
    - echo =================== Pushing the Docker image to ECR ===================
    - docker push $REPOSITORY_URI:$IMAGE_TAG

artifacts:
  files:
    - config-service-0.0.1-SNAPSHOT.jar
    - 

          

